<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nderp.mapper.StaffMapper">

	<insert id="insert">
		insert into staff
			values(staff_seq.nextval,#{staff_name},
			#{jumin_no},#{school_code},
			#{department_code},#{graduate_day})
	</insert>
	
	<insert id="insertSkill">
		insert into staff_skill
			values(staff_skill_seq.nextval,
			(select 
			max(staff_no) from staff), 
			#{skill_code})
	</insert>
	
	

	<delete id="delete">
		delete from staff
			where staff_no = #{staff_no}
	</delete>
	
	<delete id="deleteSkill">
		delete from staff_skill
			where staff_no = #{staff_no}
	</delete>
	
	
	<update id="update">
		update staff
			set staff_name = #{staff_name},
				jumin_no = #{jumin_no},
				school_code = #{school_code},
				department_code = #{department_code},
				graduate_day = #{graduate_day}
				where staff_no = #{staff_no}
	</update>
	
	<insert id="updateSkill" parameterType="HashMap">
		insert into staff_skill
			values(staff_skill_seq.nextval,
			#{staff_no}, 
			#{skill_code})
	</insert>
	
	
	<select id="get" resultType="org.nderp.domain.Staff">
		select *
			from staff
			where staff_no = #{staff_no}
	</select>
	
	<select id="getSkill" resultType="Integer">
		select skill_code
			from staff_skill
			where staff_no = #{staff_no}
			order by skill_code
	</select>
	
	
	<select id="getListWithPaging" resultType = "org.nderp.domain.ResultDAO">
			select *
				from(
				select rn, staff_no, staff_name, sex,
					(select e.department_name
				     from code_department e
				     where d.department_code=e.department_code)as department_name , 
				     graduate_day, skill_code, school_code
					from(
					select rownum rn, staff_no, staff_name, sex, department_code, graduate_day, skill_code, school_code
								from(select rownum , c.staff_no, b. staff_name,
							      substr(b.jumin_no,8,1) as sex,
							      b.department_code,
							      b.graduate_day,
							      c.skill_code,
							      b.school_code
									from
									(
									select 
									a.staff_no, 
									      listagg(a.skill_code,',') within group(order by a.staff_skill_no) as skill_code
									from staff_skill a, staff b
									group by a.staff_no
									having a.staff_no=b.staff_no
									order by staff_no desc 
								) c,
						 staff b
						where c.staff_no=b.staff_no
						order by ${condition} ${method}
						)d
					where rownum>0	
				<foreach collection="typeArr" item="type">
					<trim prefix =" AND(" suffix=")" >
					
				 	<if test="type=='N'.toString()">
				 	staff_name like '%'||#{keyword}||'%'
				 	</if>
				 	
				 	<if test="type=='J'.toString()">
				 	sex in
					 	<foreach collection="sexArr" item="sex" open="(" separator="," close=")">
					 	 #{sex}
					 	 </foreach>
				 	</if>
				 	
				 	<if test="type=='D'.toString()">
				 	department_code = #{dept}
				 	</if>
				 	
				 	<if test="type=='S'.toString()">
				 	school_code in 
					 	<foreach collection="eduArr" item="edu" open="(" separator="," close=")">
					 	#{edu}
					 	</foreach>
				 	</if>
				 	
				 	<if test="type=='G'.toString()">
				 	<![CDATA[ 
					to_timestamp(substr(graduate_day,1,4)||substr(graduate_day,6,2)||substr(graduate_day,9,2),'YYYYMMDD')
					between	to_timestamp(#{year1}||#{month1}||#{day1},'YYYYMMDD') and to_timestamp(#{year2}||#{month2}||#{day2},'YYYYMMDD')
				 	]]>
				 	</if>
				 	
				 	<if test="type=='K'.toString()">
					 	<foreach collection="skillArr" item="skill" separator="or" >
					 	skill_code like '%'||#{skill}||'%'
					 	</foreach>
				 	</if>
				 	
				 	<if test="type=='A'.toString()">
				 		skill_code like '%'||#{add}||'%'
				 	</if>
				 	
					</trim>
				</foreach>
					
					<if test="isAdd=='Y'.toString()">
					or skill_code like '%'||#{add}||'%' 
					</if>




		
			<![CDATA[ 
				) d
				where 
				rn<=#{pageNum} * #{amount}
			)
			where rn> (#{pageNum}-1)* #{amount}
			]]>
	</select>
	
	
	
	
	<select id="getTotal" resultType = "Integer">
		select max(rn)
			from
			(select rownum rn, staff_no, staff_name, sex, department_code, graduate_day, skill_code, school_code
								from(select rownum , c.staff_no, b. staff_name,
							      substr(b.jumin_no,8,1) as sex,
							      b.department_code,
							      b.graduate_day,
							      c.skill_code,
							      b.school_code
									from
									(
									select 
									a.staff_no, 
									      listagg(a.skill_code,',') within group(order by a.staff_skill_no) as skill_code
									from staff_skill a, staff b
									group by a.staff_no
									having a.staff_no=b.staff_no
									order by staff_no desc 
								) c,
						 staff b
						where c.staff_no=b.staff_no)d
					where rownum>0	
				<foreach collection="typeArr" item="type">
					<trim prefix =" AND(" suffix=")" >
					
				 	<if test="type=='N'.toString()">
				 	staff_name like '%'||#{keyword}||'%'
				 	</if>
				 	
				 	<if test="type=='J'.toString()">
				 	sex in
					 	<foreach collection="sexArr" item="sex" open="(" separator="," close=")">
					 	 #{sex}
					 	 </foreach>
				 	</if>
				 	
				 	<if test="type=='D'.toString()">
				 	department_code = #{dept}
				 	</if>
				 	
				 	<if test="type=='S'.toString()">
				 	school_code in 
					 	<foreach collection="eduArr" item="edu" open="(" separator="," close=")">
					 	#{edu}
					 	</foreach>
				 	</if>
				 	
				 	<if test="type=='G'.toString()">
				 	<![CDATA[ 
					to_timestamp(substr(graduate_day,1,4)||substr(graduate_day,6,2)||substr(graduate_day,9,2),'YYYYMMDD')
					between	to_timestamp(#{year1}||#{month1}||#{day1},'YYYYMMDD') and to_timestamp(#{year2}||#{month2}||#{day2},'YYYYMMDD')
				 	]]>
				 	</if>
				 	
				 	<if test="type=='K'.toString()">
					 	<foreach collection="skillArr" item="skill" separator="or" >
					 	skill_code like '%'||#{skill}||'%'
					 	</foreach>
				 	</if>
				 	
				 	<if test="type=='A'.toString()">
				 		skill_code like '%'||#{add}||'%'
				 	</if>
				 	
					</trim>
				</foreach>
					
					<if test="isAdd=='Y'.toString()">
					or skill_code like '%'||#{add}||'%' 
					</if>


				 
				 order by ${condition} ${method}
		
				)
	</select>
	
</mapper>